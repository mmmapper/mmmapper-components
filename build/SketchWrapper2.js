import{S as t,i as s,s as e,u as o,t as a,a as r,n,j as l,o as c,p as i,l as p,y as u,w as d,q as m}from"./main2.js";import{P as $}from"./randomColor.js";function k(t){let s;const e=t[2].default,n=m(e,t,t[1],null);return{c(){n&&n.c()},m(t,e){n&&n.m(t,e),s=!0},p(t,s){n&&n.p&&2&s&&o(n,e,t,t[1],s,null,null)},i(t){s||(a(n,t),s=!0)},o(t){r(n,t),s=!1},d(t){n&&n.d(t)}}}function S(t){let s,e,o="initialized"===t[0]&&k(t);return{c(){o&&o.c(),s=n()},m(t,a){o&&o.m(t,a),l(t,s,a),e=!0},p(t,[e]){"initialized"===t[0]?o?(o.p(t,e),1&e&&a(o,1)):(o=k(t),o.c(),a(o,1),o.m(s.parentNode,s)):o&&(c(),r(o,1,1,(()=>{o=null})),i())},i(t){e||(a(o),e=!0)},o(t){r(o),e=!1},d(t){o&&o.d(t),t&&p(s)}}}function f(t,s,e){let{$$slots:o={},$$scope:a}=s;const{getApp:r,pixiStore:n}=u($),l=r();let c="loaded";return console.log("SketchWrapper",{status:c}),l.ticker.start(),d((()=>{e(0,c="mounted"),console.log("SketchWrapper",{status:c}),n.sketchWrapperDestructor.set((()=>(l.ticker.stop(),e(0,c="destroyed"),console.log("SketchWrapper",{status:c}),!0))),e(0,c="initialized"),console.log("SketchWrapper",{status:c})})),t.$$set=t=>{"$$scope"in t&&e(1,a=t.$$scope)},[c,a,o]}class h extends t{constructor(t){super(),s(this,t,f,S,e,{})}}export{h as S};
//# sourceMappingURL=SketchWrapper2.js.map
