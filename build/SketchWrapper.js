import{S as t,i as a,s as n,P as e,c as s,m as r,t as o,a as c,d as $,b as l,e as p,f as u,g as i,h as m,j as d,k as g,l as f}from"./main2.js";import{C as h,S as v}from"./randomColor.js";import{S as x}from"./SketchWrapper2.js";function S(t){let a,n;return a=new x({}),{c(){s(a.$$.fragment)},m(t,e){r(a,t,e),n=!0},i(t){n||(o(a.$$.fragment,t),n=!0)},o(t){c(a.$$.fragment,t),n=!1},d(t){$(a,t)}}}function q(t){let a,n;return a=new v({props:{canvas:t[0],width:"600",height:"400",editMode:!0,$$slots:{default:[S]},$$scope:{ctx:t}}}),{c(){s(a.$$.fragment)},m(t,e){r(a,t,e),n=!0},p(t,n){const e={};1&n&&(e.canvas=t[0]),4&n&&(e.$$scope={dirty:n,ctx:t}),a.$set(e)},i(t){n||(o(a.$$.fragment,t),n=!0)},o(t){c(a.$$.fragment,t),n=!1},d(t){$(a,t)}}}function w(t){let a,n,e,v,x,S,w;function k(a){t[1].call(null,a)}let C={width:"600",height:"400",class:"border shadow mx-auto",$$slots:{default:[q]},$$scope:{ctx:t}};return void 0!==t[0]&&(C.canvas=t[0]),e=new h({props:C}),l.push((()=>p(e,"canvas",k))),{c(){a=u("h1"),a.textContent="SketchWrapper",n=i(),s(e.$$.fragment),x=i(),S=u("pre"),m(S,"class","language-null")},m(t,s){d(t,a,s),d(t,n,s),r(e,t,s),d(t,x,s),d(t,S,s),S.innerHTML='<code class="language-null">&lt;script&gt;\n  import &#123; Canvas, Screen, SketchWrapper &#125; from &#39;@mmmapper/components&#39;;\n\n  let canvas;\n&lt;/script&gt;\n\n&lt;Canvas\n  bind:canvas=&#123;canvas&#125;\n  width=&quot;600&quot;\n  height=&quot;400&quot;\n  class=&quot;border shadow mx-auto&quot;\n&gt;\n  &lt;Screen canvas=&#123;canvas&#125; width=&quot;600&quot; height=&quot;400&quot; editMode=&#123;true&#125;&gt;\n    &lt;SketchWrapper&gt;&lt;/SketchWrapper&gt;\n  &lt;/Screen&gt;\n&lt;/Canvas&gt;</code>',w=!0},p(t,a){const n={};5&a&&(n.$$scope={dirty:a,ctx:t}),!v&&1&a&&(v=!0,n.canvas=t[0],g((()=>v=!1))),e.$set(n)},i(t){w||(o(e.$$.fragment,t),w=!0)},o(t){c(e.$$.fragment,t),w=!1},d(t){t&&f(a),t&&f(n),$(e,t),t&&f(x),t&&f(S)}}}function k(t){let a,n;return a=new e({props:{$$slots:{default:[w]},$$scope:{ctx:t}}}),{c(){s(a.$$.fragment)},m(t,e){r(a,t,e),n=!0},p(t,[n]){const e={};5&n&&(e.$$scope={dirty:n,ctx:t}),a.$set(e)},i(t){n||(o(a.$$.fragment,t),n=!0)},o(t){c(a.$$.fragment,t),n=!1},d(t){$(a,t)}}}function C(t,a,n){let e;return[e,function(t){e=t,n(0,e)}]}export default class extends t{constructor(t){super(),a(this,t,C,k,n,{})}}
//# sourceMappingURL=SketchWrapper.js.map
