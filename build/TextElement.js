import{S as t,i as e,s as n,y as l,w as s,P as a,c as i,m as o,t as r,a as c,d as f,b as h,e as p,f as x,g as d,h as $,j as u,k as g,l as m,z as y,n as S,o as w,p as v,A as z}from"./main2.js";import{P as k,D as b,a as q,W as C,C as T,S as j}from"./randomColor.js";import{S as W}from"./SketchWrapper2.js";function E(t,e,n){let{text:a}=e,{x:i}=e,{y:o}=e,{width:r}=e,{height:c}=e,{style:f={opacity:1,scale:1}}=e,{textStyle:h={}}=e,{fontSize:p=26}=e,{fill:x=0}=e;const{getApp:d,pixiStore:$}=l(k),u=d(),g=new b,m=new q.Text(a,{...h,fontSize:p,fill:x}),y=m;let S,w=!1;return $.editMode.subscribe((t=>{w=t,S&&S.showHelper(t)})),s((()=>{let t=new q.Graphics;t.lineStyle(0),t.drawRect(0,0,r,c),t.addChild(m),S=new C(t,u.renderer,u.screen,w),S.x=i,S.y=o,g.makeDraggable(S.group,S.sprite),u.stage.addChild(S.group);const e=()=>{m.text=a,m.alpha=f.opacity,m.setTransform(r/2-p*f.scale/2,c/2-p*f.scale/2,f.scale,f.scale),S.update()};u.ticker.add(e),$.destructors.update((t=>[...t,()=>{u.ticker.remove(e,this),console.log("TextElement destroyed")}]))})),t.$$set=t=>{"text"in t&&n(0,a=t.text),"x"in t&&n(1,i=t.x),"y"in t&&n(2,o=t.y),"width"in t&&n(3,r=t.width),"height"in t&&n(4,c=t.height),"style"in t&&n(5,f=t.style),"textStyle"in t&&n(6,h=t.textStyle),"fontSize"in t&&n(7,p=t.fontSize),"fill"in t&&n(8,x=t.fill)},t.$$.update=()=>{256&t.$$.dirty&&(m.tint=x)},[a,i,o,r,c,f,h,p,x,y]}class M extends t{constructor(t){super(),e(this,t,E,null,n,{text:0,x:1,y:2,width:3,height:4,style:5,textStyle:6,fontSize:7,fill:8,pixiObj:9})}get pixiObj(){return this.$$.ctx[9]}}function A(t,e,n){const l=t.slice();return l[3]=e[n],l}function D(t){let e,n;return e=new M({props:{text:t[3].value,style:t[3].style,x:t[3].x,y:t[3].y,width:t[3].width,height:t[3].height,fontSize:t[3].fontSize,fill:t[3].fill,textStyle:t[3].textStyle}}),{c(){i(e.$$.fragment)},m(t,l){o(e,t,l),n=!0},p:y,i(t){n||(r(e.$$.fragment,t),n=!0)},o(t){c(e.$$.fragment,t),n=!1},d(t){f(e,t)}}}function H(t){let e,n,l=t[1],s=[];for(let e=0;e<l.length;e+=1)s[e]=D(A(t,l,e));const a=t=>c(s[t],1,1,(()=>{s[t]=null}));return{c(){for(let t=0;t<s.length;t+=1)s[t].c();e=S()},m(t,l){for(let e=0;e<s.length;e+=1)s[e].m(t,l);u(t,e,l),n=!0},p(t,n){if(2&n){let i;for(l=t[1],i=0;i<l.length;i+=1){const a=A(t,l,i);s[i]?(s[i].p(a,n),r(s[i],1)):(s[i]=D(a),s[i].c(),r(s[i],1),s[i].m(e.parentNode,e))}for(w(),i=l.length;i<s.length;i+=1)a(i);v()}},i(t){if(!n){for(let t=0;t<l.length;t+=1)r(s[t]);n=!0}},o(t){s=s.filter(Boolean);for(let t=0;t<s.length;t+=1)c(s[t]);n=!1},d(t){z(s,t),t&&m(e)}}}function J(t){let e,n;return e=new W({props:{$$slots:{default:[H]},$$scope:{ctx:t}}}),{c(){i(e.$$.fragment)},m(t,l){o(e,t,l),n=!0},p(t,n){const l={};64&n&&(l.$$scope={dirty:n,ctx:t}),e.$set(l)},i(t){n||(r(e.$$.fragment,t),n=!0)},o(t){c(e.$$.fragment,t),n=!1},d(t){f(e,t)}}}function O(t){let e,n;return e=new j({props:{canvas:t[0],width:"600",height:"400",editMode:!0,$$slots:{default:[J]},$$scope:{ctx:t}}}),{c(){i(e.$$.fragment)},m(t,l){o(e,t,l),n=!0},p(t,n){const l={};1&n&&(l.canvas=t[0]),64&n&&(l.$$scope={dirty:n,ctx:t}),e.$set(l)},i(t){n||(r(e.$$.fragment,t),n=!0)},o(t){c(e.$$.fragment,t),n=!1},d(t){f(e,t)}}}function P(t){let e,n,l,s,a,y,S,w,v;function z(e){t[2].call(null,e)}let k={width:"600",height:"400",class:"border shadow mx-auto",$$slots:{default:[O]},$$scope:{ctx:t}};return void 0!==t[0]&&(k.canvas=t[0]),a=new T({props:k}),h.push((()=>p(a,"canvas",z))),{c(){e=x("h1"),e.textContent="TextElement",n=d(),l=x("p"),l.textContent="A text element.",s=d(),i(a.$$.fragment),S=d(),w=x("pre"),$(w,"class","language-null")},m(t,i){u(t,e,i),u(t,n,i),u(t,l,i),u(t,s,i),o(a,t,i),u(t,S,i),u(t,w,i),w.innerHTML='<code class="language-null">&lt;script&gt;\n&lt;script&gt;\n  import &#123; Canvas, Screen, SketchWrapper &#125; from &#39;@mmmapper/components&#39;;\n  import &#123; TextElement &#125; from &#39;@mmmapper/components&#39;;\n\n  let canvas;\n\n  let texts = [\n    &#123;\n      value: &#39;hello hello&#39;,\n      x: 250,\n      y: 100,\n      width: 200,\n      height: 50,\n      fontSize: 20,\n      fill: 0x000000,\n      style: &#123; opacity: 1, scale: 1 &#125;,\n    &#125;,\n    &#123;\n      value: &#39;あ&#39;,\n      x: 250,\n      y: 200,\n      width: 100,\n      height: 100,\n      fontSize: 60,\n      fill: 0xffffff,\n      style: &#123; opacity: 1, scale: 1.5 &#125;,\n      textStyle: &#123; lineJoin: &#39;bevel&#39;, strokeThickness: 2, fill: 0xffffff &#125;,\n    &#125;,\n  ];\n&lt;/script&gt;\n\n&lt;Canvas\n  bind:canvas=&#123;canvas&#125;\n  width=&quot;600&quot;\n  height=&quot;400&quot;\n  class=&quot;border shadow mx-auto&quot;\n&gt;\n  &lt;Screen canvas=&#123;canvas&#125; width=&quot;600&quot; height=&quot;400&quot; editMode=&#123;true&#125;&gt;\n    &lt;SketchWrapper&gt;\n      &#123;#each texts as text&#125;\n        &lt;TextElement\n          text=&#123;text.value&#125;\n          style=&#123;text.style&#125;\n          x=&#123;text.x&#125;\n          y=&#123;text.y&#125;\n          width=&#123;text.width&#125;\n          height=&#123;text.height&#125;\n          fontSize=&#123;text.fontSize&#125;\n          fill=&#123;text.fill&#125;\n          textStyle=&#123;text.textStyle&#125; /&gt;\n      &#123;/each&#125;\n    &lt;/SketchWrapper&gt;\n  &lt;/Screen&gt;\n&lt;/Canvas&gt;</code>',v=!0},p(t,e){const n={};65&e&&(n.$$scope={dirty:e,ctx:t}),!y&&1&e&&(y=!0,n.canvas=t[0],g((()=>y=!1))),a.$set(n)},i(t){v||(r(a.$$.fragment,t),v=!0)},o(t){c(a.$$.fragment,t),v=!1},d(t){t&&m(e),t&&m(n),t&&m(l),t&&m(s),f(a,t),t&&m(S),t&&m(w)}}}function B(t){let e,n;return e=new a({props:{$$slots:{default:[P]},$$scope:{ctx:t}}}),{c(){i(e.$$.fragment)},m(t,l){o(e,t,l),n=!0},p(t,[n]){const l={};65&n&&(l.$$scope={dirty:n,ctx:t}),e.$set(l)},i(t){n||(r(e.$$.fragment,t),n=!0)},o(t){c(e.$$.fragment,t),n=!1},d(t){f(e,t)}}}function G(t,e,n){let l;return[l,[{value:"hello hello",x:250,y:100,width:200,height:50,fontSize:20,fill:0,style:{opacity:1,scale:1}},{value:"あ",x:250,y:200,width:100,height:100,fontSize:60,fill:16777215,style:{opacity:1,scale:1.5},textStyle:{lineJoin:"bevel",strokeThickness:2,fill:16777215}}],function(t){l=t,n(0,l)}]}export default class extends t{constructor(t){super(),e(this,t,G,B,n,{})}}
//# sourceMappingURL=TextElement.js.map
